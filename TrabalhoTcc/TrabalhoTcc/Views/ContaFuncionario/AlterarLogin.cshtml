@model TrabalhoTcc.Models.Conta.LoginFuncionario
@{
    Layout = "~/Views/Shared/MasterAdiministrador.cshtml";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmAlterarLogin" }))
{
    @Html.AntiForgeryToken()
    <h3 class="text-center">Alterar Usuário/Senha</h3>
    <hr />
    <div class="row">
        <div class="form-horizontal col-md-12">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <div class="col-md-6">
                    @Html.Label("Usuário Atual:", htmlAttributes: new { @class = "control-label" })<span class="text-danger"> *</span>

                    @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control", @id = "usuario" } })
                    @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.Label("Senha Atual:", htmlAttributes: new { @class = "control-label" })<span class="text-danger"> *</span>

                    @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", @id = "senha" } })
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                    @*<input type="text" id="novaSenha" name="novaSenha" />*@
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    @Html.Label("Novo Usuário:", htmlAttributes: new { @class = "control-label" })<span class="text-danger"> *</span>

                    @Html.Editor("novoUsuario", new { htmlAttributes = new { @class = "form-control", @id = "novoUsuario" } })
                    @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.Label("Nova Senha:", htmlAttributes: new { @class = "control-label" })<span class="text-danger"> *</span>

                    @Html.Editor("novaSenha", new { htmlAttributes = new { @class = "form-control", @id = "novaSenha", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                    @*<input type="text" id="novaSenha" name="novaSenha" />*@
                </div>
            </div>
        </div>

    </div>
    <hr />
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> Salvar</button>
                    @if (Request.IsAuthenticated && User.IsInRole("Administrador"))
                    {
                        <a href="@Url.Action("Index")" class="btn btn-outline-dark">
                            <span class="fa fa-arrow-circle-left"></span> Lista de Usuários
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
}
@section scripts{
    <script src="~/Scripts/funcionario/login/index.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}